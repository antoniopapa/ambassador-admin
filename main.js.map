{"version":3,"sources":["./src/app/secure/links/links.component.ts","./src/app/secure/links/links.component.html","./src/app/secure/profile/profile.component.ts","./src/app/secure/profile/profile.component.html","./src/app/public/public.component.ts","./src/app/public/public.component.html","./src/app/secure/nav/nav.component.ts","./src/app/secure/nav/nav.component.html","./src/environments/environment.ts","./src/app/secure/menu/menu.component.ts","./src/app/secure/menu/menu.component.html","./src/app/secure/secure.module.ts","./src/app/services/product.service.ts","./src/app/interceptors/credential.interceptor.ts","./src/app/services/link.service.ts","./src/app/secure/secure.component.ts","./src/app/secure/secure.component.html","./src/app/secure/users/users.component.ts","./src/app/secure/users/users.component.html","./src/app/public/register/register.component.ts","./src/app/public/register/register.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/secure/products/products-form/products-form.component.ts","./src/app/secure/products/products-form/products-form.component.html","./src/app/public/public.module.ts","./src/app/secure/orders/orders.component.html","./src/app/secure/orders/orders.component.ts","./src/app/app.module.ts","./src/app/emitters/emitters.ts","./src/app/services/order.service.ts","./src/app/services/auth.service.ts","./src/app/services/user.service.ts","./src/app/secure/products/products.component.ts","./src/app/secure/products/products.component.html","./src/app/public/login/login.component.ts","./src/app/public/login/login.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {LinkService} from '../../services/link.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Order} from '../../interfaces/order';\n\n@Component({\n  selector: 'app-links',\n  templateUrl: './links.component.html',\n  styleUrls: ['./links.component.css']\n})\nexport class LinksComponent implements OnInit {\n  columns = ['ID', 'code', 'count', 'revenue'];\n  dataSource = new MatTableDataSource();\n  id: number;\n\n  constructor(\n    private linkService: LinkService,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params.id;\n\n    this.linkService.all(this.id).subscribe(\n      links => {\n        this.dataSource.data = links;\n      }\n    );\n  }\n\n  sum(orders: Order[]): number {\n    return orders.reduce((s, o) => s + o.total, 0);\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"table table-striped table-sm mat-elevation-z8\">\n  <ng-container matColumnDef=\"ID\">\n    <th mat-header-cell *matHeaderCellDef>#</th>\n    <td mat-cell *matCellDef=\"let link\"> {{link.id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef>Code</th>\n    <td mat-cell *matCellDef=\"let link\"> {{link.code}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"count\">\n    <th mat-header-cell *matHeaderCellDef>Count</th>\n    <td mat-cell *matCellDef=\"let link\"> {{link.orders.length }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"revenue\">\n    <th mat-header-cell *matHeaderCellDef>Revenue</th>\n    <td mat-cell *matCellDef=\"let link\"> {{sum(link.orders)}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n</table>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport {Emitters} from '../../emitters/emitters';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  infoForm: FormGroup;\n  passwordForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.infoForm = this.formBuilder.group({\n      first_name: '',\n      last_name: '',\n      email: ''\n    });\n\n    this.passwordForm = this.formBuilder.group({\n      password: '',\n      password_confirm: ''\n    });\n\n    Emitters.authEmitter.subscribe(\n      user => {\n        this.infoForm.patchValue(user);\n      }\n    );\n  }\n\n  infoSubmit(): void {\n    this.authService.updateInfo(this.infoForm.getRawValue())\n      .subscribe(user => {\n        Emitters.authEmitter.emit(user);\n      });\n  }\n\n  passwordSubmit(): void {\n    this.authService.updatePassword(this.passwordForm.getRawValue())\n      .subscribe(user => console.log(user));\n  }\n\n}\n","<h3>Account Information</h3>\n<form [formGroup]=\"infoForm\" (submit)=\"infoSubmit()\">\n  <div class=\"mb-3\">\n    <label>First Name</label>\n    <input formControlName=\"first_name\" class=\"form-control\" name=\"first_name\">\n  </div>\n  <div class=\"mb-3\">\n    <label>Last Name</label>\n    <input formControlName=\"last_name\" class=\"form-control\" name=\"last_name\">\n  </div>\n  <div class=\"mb-3\">\n    <label>Email</label>\n    <input formControlName=\"email\" class=\"form-control\" name=\"email\">\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n\n<h3 class=\"mt-4\">Change Password</h3>\n<form [formGroup]=\"passwordForm\" (submit)=\"passwordSubmit()\">\n  <div class=\"mb-3\">\n    <label>Password</label>\n    <input formControlName=\"password\" type=\"password\" class=\"form-control\" name=\"password\">\n  </div>\n  <div class=\"mb-3\">\n    <label>Password Confirm</label>\n    <input formControlName=\"password_confirm\" type=\"password\" class=\"form-control\" name=\"password_confirm\">\n  </div>\n\n  <button class=\"btn btn-outline-secondary\">Save</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-public',\n  templateUrl: './public.component.html',\n  styleUrls: ['./public.component.css']\n})\nexport class PublicComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {User} from '../../interfaces/user';\nimport {Emitters} from '../../emitters/emitters';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  user: User;\n\n  constructor(private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    Emitters.authEmitter.subscribe(\n      user => {\n        this.user = user;\n      }\n    );\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe(\n      res => console.log(res)\n    );\n  }\n}\n","<header class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n  <a class=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"#\">Company name</a>\n\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a routerLink=\"/profile\" class=\"p-2 text-white text-decoration-none\">{{user?.first_name}} {{user?.last_name}}</a>\n    <a routerLink=\"/login\" class=\"p-2 text-white text-decoration-none\" (click)=\"logout()\">Sign out</a>\n  </nav>\n</header>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:8000/api/admin'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n  <div class=\"position-sticky pt-3\">\n    <ul class=\"nav flex-column\">\n      <li class=\"nav-item\">\n        <a routerLink=\"/users\" routerLinkActive=\"active\" class=\"nav-link\">\n          Users\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"/products\" routerLinkActive=\"active\" class=\"nav-link\">\n          Products\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"/orders\" routerLinkActive=\"active\" class=\"nav-link\">\n          Orders\n        </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SecureComponent} from './secure.component';\nimport {NavComponent} from './nav/nav.component';\nimport {MenuComponent} from './menu/menu.component';\nimport {RouterModule} from '@angular/router';\nimport {ProfileComponent} from './profile/profile.component';\nimport {UsersComponent} from './users/users.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {LinksComponent} from './links/links.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ProductsComponent} from './products/products.component';\nimport {ProductsFormComponent} from './products/products-form/products-form.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {OrdersComponent} from './orders/orders.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\n\n@NgModule({\n  declarations: [\n    SecureComponent,\n    NavComponent,\n    MenuComponent,\n    ProfileComponent,\n    UsersComponent,\n    LinksComponent,\n    ProductsComponent,\n    ProductsFormComponent,\n    OrdersComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonToggleModule,\n    MatExpansionModule,\n  ]\n})\nexport class SecureModule {\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Product} from '../interfaces/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  endpoint = `${environment.api}/products`;\n\n  constructor(private http: HttpClient) {\n  }\n\n  all(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.endpoint);\n  }\n\n  create(data: any): Observable<Product> {\n    return this.http.post<Product>(this.endpoint, data);\n  }\n\n  get(id: number): Observable<Product> {\n    return this.http.get<Product>(`${this.endpoint}/${id}`);\n  }\n\n  update(id: number, data: any): Observable<Product> {\n    return this.http.put<Product>(`${this.endpoint}/${id}`, data);\n  }\n\n  delete(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.endpoint}/${id}`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class CredentialInterceptor implements HttpInterceptor {\n\n  constructor() {\n  }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const req = request.clone({\n      withCredentials: true\n    });\n\n    return next.handle(req);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Link} from '../interfaces/link';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LinkService {\n  constructor(private http: HttpClient) {\n  }\n\n  all(id: number): Observable<Link[]> {\n    return this.http.get<Link[]>(`${environment.api}/users/${id}/links`);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {Emitters} from '../emitters/emitters';\n\n@Component({\n  selector: 'app-secure',\n  templateUrl: './secure.component.html',\n  styleUrls: ['./secure.component.css']\n})\nexport class SecureComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.authService.user().subscribe(\n      user => {\n        Emitters.authEmitter.emit(user);\n      },\n      () => {\n        Emitters.authEmitter.emit(null);\n        this.router.navigate(['/login']);\n      }\n    );\n  }\n\n}\n","<app-nav></app-nav>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <app-menu></app-menu>\n\n    <main class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</div>\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {UserService} from '../../services/user.service';\nimport {User} from '../../interfaces/user';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit, AfterViewInit {\n  columns = ['ID', 'name', 'email', 'actions'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.userService.all().subscribe(\n      users => {\n        this.dataSource.data = users;\n      }\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"table table-striped table-sm mat-elevation-z8\">\n  <ng-container matColumnDef=\"ID\">\n    <th mat-header-cell *matHeaderCellDef>#</th>\n    <td mat-cell *matCellDef=\"let user\"> {{user.id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef=\"let user\"> {{user.first_name}} {{user.last_name}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"email\">\n    <th mat-header-cell *matHeaderCellDef>Email</th>\n    <td mat-cell *matCellDef=\"let user\"> {{user.email}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef>Actions</th>\n    <td mat-cell *matCellDef=\"let user\">\n      <a [routerLink]=\"['/users', user.id, 'links']\" mat-stroked-button color=\"primary\">View</a>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n</table>\n\n<mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {environment} from '../../../environments/environment';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css', './../public.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n    });\n  }\n\n  submit(): void {\n    this.authService.register(this.form.getRawValue())\n      .subscribe(() => this.router.navigate(['/login']));\n  }\n}\n","<main class=\"form-signin\">\n  <form [formGroup]=\"form\" (submit)=\"submit()\">\n    <h1 class=\"h3 mb-3 fw-normal\">Please register</h1>\n\n    <input formControlName=\"first_name\" class=\"form-control\" placeholder=\"First Name\" required>\n\n    <input formControlName=\"last_name\" class=\"form-control\" placeholder=\"Last Name\" required>\n\n    <input formControlName=\"email\" type=\"email\" class=\"form-control\" placeholder=\"Email\" required>\n\n    <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n\n    <input formControlName=\"password_confirm\" type=\"password\" class=\"form-control\" placeholder=\"Password Confirm\"\n           required>\n\n    <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Submit</button>\n  </form>\n</main>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-admin';\n}\n","<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ProductService} from '../../../services/product.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-products-form',\n  templateUrl: './products-form.component.html',\n  styleUrls: ['./products-form.component.css']\n})\nexport class ProductsFormComponent implements OnInit {\n  form: FormGroup;\n  create: boolean;\n  id: number;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      title: '',\n      description: '',\n      image: '',\n      price: ''\n    });\n\n    this.create = this.route.snapshot.data.create;\n\n    if (!this.create) {\n      this.id = this.route.snapshot.params.id;\n\n      this.productService.get(this.id).subscribe(\n        product => {\n          this.form.patchValue(product);\n        }\n      );\n    }\n  }\n\n  submit(): void {\n    const method = this.create\n      ? this.productService.create(this.form.getRawValue())\n      : this.productService.update(this.id, this.form.getRawValue());\n\n    method.subscribe(() => this.router.navigate(['/products']));\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <div class=\"mb-3\">\n    <mat-form-field appearance=\"standard\">\n      <mat-label>Title</mat-label>\n      <input formControlName=\"title\" matInput placeholder=\"Title\">\n    </mat-form-field>\n  </div>\n  <div class=\"mb-3\">\n    <mat-form-field appearance=\"standard\">\n      <mat-label>Description</mat-label>\n      <textarea formControlName=\"description\" matInput placeholder=\"Description\"></textarea>\n    </mat-form-field>\n  </div>\n  <div class=\"mb-3\">\n    <mat-form-field appearance=\"standard\">\n      <mat-label>Image</mat-label>\n      <input formControlName=\"image\" matInput placeholder=\"Image\">\n    </mat-form-field>\n  </div>\n  <div class=\"mb-3\">\n    <mat-form-field appearance=\"standard\">\n      <mat-label>Price</mat-label>\n      <input formControlName=\"price\" type=\"number\" matInput placeholder=\"Price\">\n    </mat-form-field>\n  </div>\n  <button mat-flat-button color=\"primary\">Save</button>\n</form>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PublicComponent} from './public.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    PublicComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class PublicModule {\n}\n","<mat-expansion-panel hideToggle *ngFor=\"let order of orders\">\n  <mat-expansion-panel-header>\n    <mat-panel-title>\n      {{order.name}} {{order.email}}\n    </mat-panel-title>\n    <mat-panel-description>\n      ${{order.total}}\n    </mat-panel-description>\n  </mat-expansion-panel-header>\n  <table class=\"table table-striped table-sm\">\n    <thead>\n    <tr>\n      <th>#</th>\n      <th>Product Title</th>\n      <th>Price</th>\n      <th>Quantity</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let item of order.order_items\">\n      <td>{{item.id}}</td>\n      <td>{{item.product_title}}</td>\n      <td>{{item.price}}</td>\n      <td>{{item.quantity}}</td>\n    </tr>\n    </tbody>\n  </table>\n</mat-expansion-panel>\n","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from '../../services/order.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orders = [];\n\n  constructor(private orderService: OrderService) {\n  }\n\n  ngOnInit(): void {\n    this.orderService.all().subscribe(\n      orders => {\n        this.orders = orders;\n      }\n    );\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {PublicModule} from './public/public.module';\nimport {SecureModule} from './secure/secure.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CredentialInterceptor} from './interceptors/credential.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    PublicModule,\n    SecureModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CredentialInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {EventEmitter} from '@angular/core';\nimport {User} from '../interfaces/user';\n\nexport class Emitters {\n  static authEmitter = new EventEmitter<User>();\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Order} from '../interfaces/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  endpoint = `${environment.api}/orders`;\n\n  constructor(private http: HttpClient) {\n  }\n\n  all(): Observable<Order[]> {\n    return this.http.get<Order[]>(this.endpoint);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {User} from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  register(data: any): Observable<User> {\n    return this.http.post<User>(`${environment.api}/register`, data);\n  }\n\n  login(data: any): Observable<any> {\n    return this.http.post(`${environment.api}/login`, data);\n  }\n\n  user(): Observable<User> {\n    return this.http.get<User>(`${environment.api}/user`);\n  }\n\n  logout(): Observable<any> {\n    return this.http.post(`${environment.api}/logout`, {});\n  }\n\n  updateInfo(data: any): Observable<User> {\n    return this.http.put<User>(`${environment.api}/users/info`, data);\n  }\n\n  updatePassword(data: any): Observable<User> {\n    return this.http.put<User>(`${environment.api}/users/password`, data);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {User} from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  endpoint = `${environment.api}/ambassadors`;\n\n  constructor(private http: HttpClient) {\n  }\n\n  all(): Observable<User[]> {\n    return this.http.get<User[]>(this.endpoint);\n  }\n}\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ProductService} from '../../services/product.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {Product} from '../../interfaces/product';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit, AfterViewInit {\n  columns = ['ID', 'image', 'title', 'description', 'price', 'action'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private productService: ProductService) {\n  }\n\n  ngOnInit(): void {\n    this.productService.all().subscribe(\n      products => {\n        this.dataSource.data = products;\n      }\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  delete(id: number): void {\n    if (confirm('Are you sure?')) {\n      this.productService.delete(id).subscribe(\n        () => {\n          this.dataSource.data = this.dataSource.data.filter((p: Product) => p.id !== id);\n        }\n      );\n    }\n  }\n}\n","<div class=\"pt-3 pb-2 mb-3 border-bottom\">\n  <a routerLink=\"/products/create\" mat-stroked-button color=\"primary\">Add</a>\n</div>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"table table-striped table-sm mat-elevation-z8\">\n  <ng-container matColumnDef=\"ID\">\n    <th mat-header-cell *matHeaderCellDef>#</th>\n    <td mat-cell *matCellDef=\"let product\"> {{product.id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"image\">\n    <th mat-header-cell *matHeaderCellDef>Image</th>\n    <td mat-cell *matCellDef=\"let product\"><img [src]=\"product.image\" height=\"50\"/></td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"title\">\n    <th mat-header-cell *matHeaderCellDef>Title</th>\n    <td mat-cell *matCellDef=\"let product\"> {{product.title}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef>Description</th>\n    <td mat-cell *matCellDef=\"let product\"> {{product.description}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"price\">\n    <th mat-header-cell *matHeaderCellDef>Price</th>\n    <td mat-cell *matCellDef=\"let product\"> {{product.price}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"action\">\n    <th mat-header-cell *matHeaderCellDef>Action</th>\n    <td mat-cell *matCellDef=\"let product\">\n      <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n        <mat-button-toggle [routerLink]=\"['/products', product.id, 'edit']\">Edit</mat-button-toggle>\n        <mat-button-toggle (click)=\"delete(product.id)\">Delete</mat-button-toggle>\n      </mat-button-toggle-group>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n</table>\n\n<mat-paginator pageSize=\"10\" showFirstLastButtons></mat-paginator>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css', './../public.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n\n  submit(): void {\n    this.authService.login(this.form.getRawValue())\n      .subscribe(() => this.router.navigate(['/']));\n  }\n}\n","<main class=\"form-signin\">\n  <form [formGroup]=\"form\" (submit)=\"submit()\">\n    <h1 class=\"h3 mb-3 fw-normal\">Please sign in</h1>\n\n    <input formControlName=\"email\" type=\"email\" class=\"form-control\" placeholder=\"Email\" required>\n\n    <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n\n    <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Submit</button>\n  </form>\n</main>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SecureComponent} from './secure/secure.component';\nimport {PublicComponent} from './public/public.component';\nimport {LoginComponent} from './public/login/login.component';\nimport {RegisterComponent} from './public/register/register.component';\nimport {ProfileComponent} from './secure/profile/profile.component';\nimport {UsersComponent} from './secure/users/users.component';\nimport {LinksComponent} from './secure/links/links.component';\nimport {ProductsComponent} from './secure/products/products.component';\nimport {ProductsFormComponent} from './secure/products/products-form/products-form.component';\nimport {OrdersComponent} from './secure/orders/orders.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SecureComponent,\n    children: [\n      {path: '', pathMatch: 'full', redirectTo: 'users'},\n      {path: 'profile', component: ProfileComponent},\n      {path: 'users', component: UsersComponent},\n      {path: 'users/:id/links', component: LinksComponent},\n      {path: 'products', component: ProductsComponent},\n      {path: 'products/create', component: ProductsFormComponent, data: {create: true}},\n      {path: 'products/:id/edit', component: ProductsFormComponent, data: {create: false}},\n      {path: 'orders', component: OrdersComponent},\n    ]\n  },\n  {\n    path: '',\n    component: PublicComponent,\n    children: [\n      {path: 'login', component: LoginComponent},\n      {path: 'register', component: RegisterComponent}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}